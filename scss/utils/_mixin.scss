@mixin media($points) {
    @media screen and (min-width: $points) {
        @content;
    }
}

@mixin media-desktop {
    @media screen and (min-width: 1200px) {
        @content;
    }
}

@mixin media-tablet($brackpoints) {
    @media screen and (min-width: 768px) {
        @content;
    }
}

@mixin media-mob($brackpoints) {
    @media screen and (min-width: 480px) {
        @content;
    }
}


@mixin sizes($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin any-hover($duration: 0.3s, $function: ease, $property: all) {
    @media (any-hover: hover) {
        transition: $duration $function $property;
        &:hover {
            @content;
        }
    }
}

@mixin retina() {
    @media (min-device-pixel-ratio: 2),
    (min-resolution: 192dpi),
    (min-resolution: 2dppx) {
        @content;
    }
}

@function decimal-round($number, $digits: 0, $mode: round) {
    $n: 1;
    // $number must be a number
    @if type-of($number) != number {
      @warn '#{ $number } is not a number.';
      @return $number;
    }
    // $digits must be a unitless number
    @if type-of($digits) != number {
      @warn '#{ $digits } is not a number.';
      @return $number;
    } @else if not unitless($digits) {
      @warn '#{ $digits } has a unit.';
      @return $number;
    }
    @if $digits > 0 {
      @for $i from 1 through $digits {
        $n: $n * 10;
      }
    }
    @if $mode == round {
      @return round($number * $n) / $n;
    } @else if $mode == ceil {
      @return ceil($number * $n) / $n;
    } @else if $mode == floor {
      @return floor($number * $n) / $n;
    } @else {
      @warn '#{ $mode } is undefined keyword.';
      @return $number;
    }
  }